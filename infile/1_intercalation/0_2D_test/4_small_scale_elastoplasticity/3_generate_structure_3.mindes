###### whether to test this input file
InputFile.debug = true

###### Init Solver
Solver.Mesh.Nx = 100
Solver.Mesh.Ny = 100
Solver.Mesh.Nz = 1
Solver.Loop.begin_step = 0
Solver.Loop.end_step = 1000
Solver.Loop.screen_output_step = 100
Solver.Loop.vts_output_step = 100
Solver.Loop.data_output_step = 100
Solver.PCT.TimeInterval.dt = 0.1
Postprocess.PCT.VTS.phi_index = true
Postprocess.PCT.VTS.con = true
Postprocess.PCT.VTS.phi_name = true
Solver.Phi.is_normalize = true

Solver.Phases = {[(liquid),(Cu,Li)],[(LiSn),(Cu,Li)],[(Li7Sn3),(Cu,Li)],[(CuLi2Sn2),(Cu,Li)],[(Cu2LiSn),(Cu,Li)],[(Cu),(Cu,Li)],[(CuLi2Sn),(Cu,Li)]} 
Solver.Comps = (Cu,Li)

Preprocess.Microstructure.is_datafile_init = true
Preprocess.Microstructure.datafile_path = 3_generate_structure_2\data_end.dat

# ModelsManager.Phi.equation : 0 - Const, 1 - AllenCahn Standard, 2 - AllenCahn Pairwise, 3 - CahnHilliard Standard
ModelsManager.Phi.equation = 2
# ModelsManager.Phi.Lij.const  = Lij_value 
#                      .matrix = [(phi_i, phi_j, Lij_value), ... ] 
ModelsManager.Phi.Lij.const = 0.100000
# ModelsManager.Phi.InterfaceEnergy.int_gradient : 0 - Steinbach_1996 , 1 - Steinbach_1999 , 2 - Steinbach_G2009
ModelsManager.Phi.InterfaceEnergy.int_gradient = 2
# ModelsManager.Phi.InterfaceEnergy.int_potential : 0 - Nestler_Well , 1 - Nestler_Obstacle , 2 - Steinbach_P2009
ModelsManager.Phi.InterfaceEnergy.int_potential = 2
ModelsManager.Phi.InterfaceEnergy.int_width = 6.000000
# ModelsManager.Phi.xi_ab.const  = xi_ab 
#                        .matrix = [(phi_a, phi_b, xi_ab_value), ...] 
ModelsManager.Phi.xi_ab.const = 1.000000
# ModelsManager.Phi.xi_abc.const  = xi_ab 
#                         .matrix = [(phi_a, phi_b, phi_c, xi_abc_value), ...] 
ModelsManager.Phi.xi_abc.const = 0.000000
