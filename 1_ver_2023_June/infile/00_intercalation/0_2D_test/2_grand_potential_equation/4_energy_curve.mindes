###### whether to test this input file
InputFile.debug = true

Solver.Phases = {[(liquid),(Cu,Li)],[(LiSn),(Cu,Li)],[(Li7Sn3),(Cu,Li)],[(CuLi2Sn2),(Cu,Li)],[(Cu2LiSn),(Cu,Li)],[(Cu),(Cu,Li)],[(CuLi2Sn),(Cu,Li)]} 
Solver.Comps = (Cu,Li)

# ModelsManager.Phi.equation : 0 - Const, 1 - AllenCahn Standard, 2 - AllenCahn Pairwise, 3 - CahnHilliard Standard
ModelsManager.Phi.equation = 2
# ModelsManager.Con.equation : 0 - Const, 1 - TotalConcentration, 2 - PhaseConcentration, 3 - GrandPotential
ModelsManager.Con.equation = 2
# ModelsManager.PhiCon.BulkEnergy.type : 8 - HighOrder
ModelsManager.PhiCon.BulkEnergy.type = 8
# High Order Multivariate Linear Equation : f(xi) = sum_i{ sum_j[ Aij * xi^j ] }, i: component, j: order
ModelsManager.Phi.BulkEnergy.liquid = [(0.0),(0.0)]
ModelsManager.Phi.BulkEnergy.LiSn = [(f_LiSn_A00,f_LiSn_A01,f_LiSn_A02),(f_LiSn_A10,f_LiSn_A11,f_LiSn_A12)]
ModelsManager.Phi.BulkEnergy.Li7Sn3 = [(f_Li7Sn3_A00,f_Li7Sn3_A01,f_Li7Sn3_A02),(f_Li7Sn3_A10,f_Li7Sn3_A11,f_Li7Sn3_A12)]
ModelsManager.Phi.BulkEnergy.CuLi2Sn2 = [(f_CuLi2Sn2_A00,f_CuLi2Sn2_A01,f_CuLi2Sn2_A02),(f_CuLi2Sn2_A10,f_CuLi2Sn2_A11,f_CuLi2Sn2_A12)]
ModelsManager.Phi.BulkEnergy.Cu2LiSn = [(f_Cu2LiSn_A00,f_Cu2LiSn_A01,f_Cu2LiSn_A02),(f_Cu2LiSn_A10,f_Cu2LiSn_A11,f_Cu2LiSn_A12)]
ModelsManager.Phi.BulkEnergy.Cu = [(f_Cu_A00,f_Cu_A01,f_Cu_A02),(f_Cu_A10,f_Cu_A11,f_Cu_A12)]
ModelsManager.Phi.BulkEnergy.CuLi2Sn = [(f_CuLi2Sn_A00,f_CuLi2Sn_A01,f_CuLi2Sn_A02),(f_CuLi2Sn_A10,f_CuLi2Sn_A11,f_CuLi2Sn_A12)]

# Preprocess.plotChemEnergy = {[(plot_phase_name),(fix_con_name, ... ),(fix_value, ...)], ... }
# Preprocess.plotChemEnergy = {[(LiSn),(),()]}
Preprocess.plotChemEnergy = {[(LiSn),(),()],[(Li7Sn3),(),()],[(CuLi2Sn2),(),()],[(Cu2LiSn),(),()],[(Cu),(),()],[(CuLi2Sn),(),()]}
Preprocess.PlotChemEnergy.con_epsilon = 0.01


######################### define custom variables and functions #########################
# Define.Var = A,0.1
# Define.Func = ABC@{[(A*PHI<1>)]}@
# default field variables: "PHI", "dPHI_dt", "lap_PHI", "PHI_X", "dPHI_X_dt", "X", "dX_dt"
#                          "T", "dT_dt", "lap_T", "P", "dP_dt", "lap_P", "PHI_P", "dPHI_P_dt", "lap_PHI_P"
# default functions      : "pow", "sqrt", "abs", "exp", "ln", "log", "sin", "cos", "tan", "asin", "acos", "atan"
#########################################################################################
Define.Var = A,0.1
Define.Var = Vm,1.0
Define.Var = EnergyStandard,1.0
Define.Func = f_LiSn@{[(0.0/Vm/EnergyStandard)]}@
Define.Var = LiSn_Cu_eq,0.0
Define.Var = LiSn_Li_eq,0.5
Define.Func = f_Li7Sn3@{[(0.0/Vm/EnergyStandard)]}@
Define.Var = Li7Sn3_Cu_eq,0.0
Define.Var = Li7Sn3_Li_eq,0.7
Define.Func = f_CuLi2Sn2@{[(0.0/Vm/EnergyStandard)]}@
Define.Var = CuLi2Sn2_Cu_eq,0.2
Define.Var = CuLi2Sn2_Li_eq,0.4
Define.Func = f_Cu2LiSn@{[(0.0/Vm/EnergyStandard)]}@
Define.Var = Cu2LiSn_Cu_eq,0.5
Define.Var = Cu2LiSn_Li_eq,0.25
Define.Func = f_Cu@{[(0.0/Vm/EnergyStandard)]}@
Define.Var = Cu_Cu_eq,1.0
Define.Var = Cu_Li_eq,0.0
Define.Func = f_CuLi2Sn@{[(0.0/Vm/EnergyStandard)]}@
Define.Var = CuLi2Sn_Cu_eq,0.25
Define.Var = CuLi2Sn_Li_eq,0.5
# parameters for High Order Multivariate Linear Equations
# energy model : f_{elec\_chem}^\alpha=A\sum_{i=1}^{K-1}\left(x_i^\alpha-x_{i,eq}^\alpha\right)^2+\left(V_m\right)^{-1}G_m^\alpha\left(T\right)
# A00 = A*x_{eq}^2+f/2, A01 = -2A*x_{eq}, A02 = A
# LiSn phase
Define.Func = f_LiSn_A00@{[(A*LiSn_Cu_eq*LiSn_Cu_eq+f_LiSn<0>/2.0)]}@
Define.Func = f_LiSn_A01@{[(-2.0*A*LiSn_Cu_eq)]}@
Define.Func = f_LiSn_A02@{[(A)]}@
Define.Func = f_LiSn_A10@{[(A*LiSn_Li_eq*LiSn_Li_eq+f_LiSn<0>/2.0)]}@
Define.Func = f_LiSn_A11@{[(-2.0*A*LiSn_Li_eq)]}@
Define.Func = f_LiSn_A12@{[(A)]}@
# Li7Sn3 phase
Define.Func = f_Li7Sn3_A00@{[(A*Li7Sn3_Cu_eq*Li7Sn3_Cu_eq+f_Li7Sn3<0>/2.0)]}@
Define.Func = f_Li7Sn3_A01@{[(-2.0*A*Li7Sn3_Cu_eq)]}@
Define.Func = f_Li7Sn3_A02@{[(A)]}@
Define.Func = f_Li7Sn3_A10@{[(A*Li7Sn3_Li_eq*Li7Sn3_Li_eq+f_Li7Sn3<0>/2.0)]}@
Define.Func = f_Li7Sn3_A11@{[(-2.0*A*Li7Sn3_Li_eq)]}@
Define.Func = f_Li7Sn3_A12@{[(A)]}@
# CuLi2Sn2 phase
Define.Func = f_CuLi2Sn2_A00@{[(A*CuLi2Sn2_Cu_eq*CuLi2Sn2_Cu_eq+f_CuLi2Sn2<0>/2.0)]}@
Define.Func = f_CuLi2Sn2_A01@{[(-2.0*A*CuLi2Sn2_Cu_eq)]}@
Define.Func = f_CuLi2Sn2_A02@{[(A)]}@
Define.Func = f_CuLi2Sn2_A10@{[(A*CuLi2Sn2_Li_eq*CuLi2Sn2_Li_eq+f_CuLi2Sn2<0>/2.0)]}@
Define.Func = f_CuLi2Sn2_A11@{[(-2.0*A*CuLi2Sn2_Li_eq)]}@
Define.Func = f_CuLi2Sn2_A12@{[(A)]}@
# Cu2LiSn phase
Define.Func = f_Cu2LiSn_A00@{[(A*Cu2LiSn_Cu_eq*Cu2LiSn_Cu_eq+f_Cu2LiSn<0>/2.0)]}@
Define.Func = f_Cu2LiSn_A01@{[(-2.0*A*Cu2LiSn_Cu_eq)]}@
Define.Func = f_Cu2LiSn_A02@{[(A)]}@
Define.Func = f_Cu2LiSn_A10@{[(A*Cu2LiSn_Li_eq*Cu2LiSn_Li_eq+f_Cu2LiSn<0>/2.0)]}@
Define.Func = f_Cu2LiSn_A11@{[(-2.0*A*Cu2LiSn_Li_eq)]}@
Define.Func = f_Cu2LiSn_A12@{[(A)]}@
# Cu phase
Define.Func = f_Cu_A00@{[(A*Cu_Cu_eq*Cu_Cu_eq+f_Cu<0>/2.0)]}@
Define.Func = f_Cu_A01@{[(-2.0*A*Cu_Cu_eq)]}@
Define.Func = f_Cu_A02@{[(A)]}@
Define.Func = f_Cu_A10@{[(A*Cu_Li_eq*Cu_Li_eq+f_Cu<0>/2.0)]}@
Define.Func = f_Cu_A11@{[(-2.0*A*Cu_Li_eq)]}@
Define.Func = f_Cu_A12@{[(A)]}@
# CuLi2Sn phase
Define.Func = f_CuLi2Sn_A00@{[(A*CuLi2Sn_Cu_eq*CuLi2Sn_Cu_eq+f_CuLi2Sn<0>/2.0)]}@
Define.Func = f_CuLi2Sn_A01@{[(-2.0*A*CuLi2Sn_Cu_eq)]}@
Define.Func = f_CuLi2Sn_A02@{[(A)]}@
Define.Func = f_CuLi2Sn_A10@{[(A*CuLi2Sn_Li_eq*CuLi2Sn_Li_eq+f_CuLi2Sn<0>/2.0)]}@
Define.Func = f_CuLi2Sn_A11@{[(-2.0*A*CuLi2Sn_Li_eq)]}@
Define.Func = f_CuLi2Sn_A12@{[(A)]}@
